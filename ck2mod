(setq ck2-font-lock-keywords
	  (let* (
			 ;; define several category of keywords
			 (x-keywords '("if" "NOR" "NOT" "OR" "immediate" "AND" "╖" "FROM" "events" "random_events" "random_list" "limit" "ROOT" "factor" "modifier" "random_real_character"
						   "potential" "allow" "revoke_allowed" "ai_will_do" "active" "weight" "artifacts" "spawn_chance" "spriteTypes" "spriteType"
						   "allowed_gift" "decisions" "liege"  ))
										;            (x-types '( " " )) ; empty pattern
			 (x-traits '( "stacking" "indestructible" "slot"  "ceremonial_weapon" "scepter" "crown" "wrist" "neck" "torso" "quality" "death" "wounded" "one_legged"
						 "celibate" "hedonist" "scholar" "gardener" "mystic" "impaler" "duelist" "hunter" "poet" "falconer" "lustful" "chaste" "gluttonous" "temperate" "greedy" "charitable" "slothful" "diligent" "envious" "kind" "wroth" "\
patient" "proud" "humble" "OTHER" "deceitful" "honest" "craven" "brave" "shy" "gregarious" "ambitious" "content" "arbitrary" "just" "cynical" "zealous" "paranoid" "trusting" "cruel" "light_foot_leader" "heavy_infantry_leader" "cavalry_lea\
der" "inspiring_leader" "trickster" "organizer" "defensive_leader" "experimenter" "flanker" "aggressive_leader" "scarred" "eunuch" "blinded" "born_in_the_purple" "augustus" "flat_terrain_leader" "rough_terrain_leader" "mountain_terrain_le\
ader" "desert_terrain_leader" "holy_warrior" "unyielding_leader" "has_aztec_disease" "bracken" "blackwood" "kingsguard" "tiger" "giant" "has_grey_plague" "has_greyscale" "has_bloody_flux" "not_a_bear" "has_pox" "has_missing" "nightswatch"\
						 "turncloak" "deserter" "fire_obsessed" "Wildling" "Pirate" "People hunting" "hunting" "winterhorn" "Reaving" "salt_wife" "poor_warrior" "trained_warrior" "skilled_warrior" "master_warrior" "dothraki" "dosh_khaleen" "inherit" "dragon_egg"\
						 "child_dragon" "wild_dragon" "dragon" "dragon_slayer" "knight" "squire" "money_lender" "detached_priest" "martial_cleric" "scholarly_theologian" "mastermind_theologian" "incompetent_scientist" "dutiful_academic" "expert_scientist" "maste\
rmind_scholar" "maester" "fashionable" "crippled" "rude" "authoritative" "ruthless" "blind" "honorable" "back_seat_leader" "silent_sister" "red_priest" "favored_by_rhllor" "chosen_by_rhlor" "drowned" "grace" "stubborn" "warlock" "crow" "w\
olf" "greensight" "sea_lion" "whale" "eagle" "shadowcat" "boar" "snowbear" "direwolf" "slave" "slave_trader" "slave_owner" "former_slave" "liberator" "rebel_leader" "dead_target" "kingsmoot target" "employseer" "employhedge" "employmarsha\
ll" "employpriest" "employsteward" "employchancelor" "employspy" "employdebutante" "wikiddirewolf" "wikidcrow" "wikideagle" "wikiddog"
						 "archmaester" "diplomacy"
						 "vassal_opinion" "combat_rating" "martial" "intrigue" "steward"
						 ))

			 (x-types '("add_artifact" "add_trait" "remove_trait" "days" "months" "years" "text" "flag" "regent"
						""
						))
			 (x-constants '("EVTOPTA" "EVTOPTB" "EVTDESC" "EVTOPTC" "EVTOPTD" "EVTNAME" "EVTDESC"
							"TOOLTIP" "GFX_evt" "GFX_event" "hidden_tooltip" "custom_tooltip" "tooltip_info" "flags" "texturefile"
							))

			 (x-events '("only_playable" "is_part_of_plot" "only_rulers" "religion" "religion_group"
						 "min_age" "max_age" "age" "only_independent" "only_men" "only_women" "only_capable" "capable_only" "lacks_dlc" "has_dlc" "friends" "rivals" "prisoner" "ai_chance" "is_patrician" "is_female" "is_married"
						 "is_sick" "job" "job_castellan" "job_chancellor" "job_treasurer" "job_physician" "title" "has" "has_job_title" "has_game_rule"
						 "had" "not" "have" "artifact" "war" "culture" "culture_group" "is_in_society" "recalc_succession"
						 "on_startup" "on_yearly_pulse" "on_bi_yearly_pulse" "on_five_year_pulse" "namespace"
						 ))

			 (x-functionsid '( "id" "desc" "picture" "border" "major" "is_triggered_only" "triggered_from_code" "hide_from" "hide_new" "hide_window" "show_root"
							  "show_from_from" "show_from_from_from" "sound" "notification" "name" "value" "is_ruler" "path" "user_dir" "archive" "replace_path" "dependencies"
							  "tags" "supported_chechsums" "slots" "spawn_date" "max_amount"
							  "is_high_prio" "always" "title" "trait" "is_nomadic" "is_councillor" "ai" "wealth" "monthly_character_prestige" "monthly_character_piety"
							  "clr_character_flag" "set_character_flag"
							  ))

			 (x-functions '( "character_event" "long_character_event" "letter_event" "narrative_event" "province_event" "diploresponse_event" "unit_event" "society_quest_event"
							"option" "trigger" "mean_time_to_happen" "weight_multiplayer" "immediate" "effect"
							))

			 ;; generate regex string for each category of keywords
			 (x-keywords-regexp (regexp-opt x-keywords 'words))
			 (x-types-regexp (regexp-opt x-types 'words))
			 (x-traits-regexp (regexp-opt x-traits 'words))
			 (x-constants-regexp (regexp-opt x-constants 'words))
			 (x-events-regexp (regexp-opt x-events 'words))
			 (x-functionsid-regexp (regexp-opt x-functionsid 'words))
			 (x-functions-regexp (regexp-opt x-functions 'words)))

		  `(
			(,x-types-regexp . font-lock-type-face)
			(,x-constants-regexp . font-lock-constant-face)
			(,x-events-regexp . font-lock-string-face)
			(,x-traits-regexp . font-lock-warning-face)
			(,x-functionsid-regexp . font-lock-doc-face)
			(,x-functions-regexp . font-lock-function-name-face)
			(,x-keywords-regexp . font-lock-keyword-face)
			;; note: order above matters, because once colored, that part won't change.
			;; in general, put longer words first
			)))
;;;###autoload
(define-derived-mode ck2-mode lua-mode "crusader kings 2 mode"
					 "Major mode for editing ck2 (Crusader Kings 2)…"

					 (setq font-lock-defaults '((ck2-font-lock-keywords))))

;; add the mode to the `features' list
(provide 'ck2-mode)

(add-hook 'lua-mode-hook
		  (lambda ()
			  (modify-syntax-entry ?\' "." lua-mode-syntax-table)))

(setq auto-mode-alist (append '(("\\.txt$" . ck2-mode))
							  '(("\\.csv$" . ck2-mode))
							  '(("\\.gfx$" . ck2-mode))
							  auto-mode-alist)) ;; imporant              
